
user  nginx;
worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
error_log  /dev/stdout warn;
pid        /var/run/nginx.pid;

# worker进程打开的最大文件数
worker_rlimit_nofile 65535;

events {
    use epoll;
    # 进程最大连接数
    worker_connections  45000;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    client_max_body_size 10m;
    client_body_buffer_size 10m;
    # 用于设置读取客户端请求主体数据的超时时间，如果超时客户端还没有发送完整的主体数据，服务器将返回 "Request time out (408)" 错误。
    client_body_timeout 10;
    # 用于指定响应客户端的超时时间，如果超过这个时间，客户端没有任何活动，Nginx 将会关闭连接。
    send_timeout 10;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;
    access_log  /dev/stdout  main;

    # 开启高效文件传输模式
    sendfile        on;
    # 激活 TCP_CORK socket 选择,把 http response header 和文件的开始部分放在一个文件里发布，以减少网络报文段的数量
    tcp_nopush  on;
    # 数据在传输的过程中不进缓存
    tcp_nodelay on;

    # 用于设置客户端连接保持会话的超时时间，超过这个时间服务器会关闭该连接
    keepalive_timeout  120s 120s;
    keepalive_requests 100000;
    # 关闭不响应的客户端连接
    reset_timedout_connection on;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}