---
- name: "重置集群"
  shell: kubeadm reset -f
  ignore_errors: True
  tags:
    - join_kubeadm
  when: is_linux_os

- name: "Master初始化"
  shell: "{{ item }}"
  register: kubeadm_init
  with_items:
    - "netstat -alnp | grep -E ':6443 |:10251 |:10252 |:10250 ' | awk '{print $7}' | cut -d'/' -f1 | grep -v '-' | xargs kill -9 >/dev/null 2&> 1"
    - "kubeadm init"
  ignore_errors: True
  tags:
    - join_kubeadm
  when: is_master_node

- name: "输出初始化信息"
  debug:
    msg: "{{ kubeadm_init }}"
  tags:
    - join_kubeadm
  when: is_master_node

- name: "Master初始化后操作"
  shell: "{{ item }}"
  with_items:
    - "mkdir -p $HOME/.kube"
    - "scp /etc/kubernetes/admin.conf $HOME/.kube/config"
    - "chown $(id -u):$(id -g) $HOME/.kube/config"
  tags:
    - join_kubeadm
  when: is_master_node

- name: "Master安装Pod网络"
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  tags:
    - join_kubeadm
  when: is_master_node

- name: "查询coredns角色配置"
  shell: "kubectl get clusterrole system:coredns -o yaml"
  register: coredns_configured
  tags:
    - join_kubeadm
  when: is_master_node

- name: "设置更新后内容"
  set_fact:
    coredns_yml_output: "{{ coredns_configured.stdout + 'apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - list\n  - watch' }}"
  tags:
    - join_kubeadm
  when: is_master_node and "stdout" in coredns_configured

- name: "输出coredns配置"
  debug:
    msg: "{{ coredns_yml_output }}"
  tags:
    - join_kubeadm
  when: is_master_node and coredns_yml_output is defined

- name: "修复coredns角色异常"
  # https://github.com/coredns/helm/issues/9
  shell: "echo {{ coredns_yml_output }} |  kubectl replace -f -"
  tags:
    - join_kubeadm
  when: is_master_node and coredns_yml_output is defined

- name: "修复组件健康状态异常"
  replace:
    path: "{{ item }}"
    regexp: '(- --port=0)'
    replace: '# \1'
  with_items:
    - /etc/kubernetes/manifests/kube-scheduler.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml
  tags:
    - join_kubeadm
  when: is_master_node

- name: "重启kubelet"
  service:
    name: "kubelet"
    state: "restarted"
    enabled: "yes"
  tags:
    - join_kubeadm
  when: is_master_node

- name: "获取kubeadm token"
  shell: kubeadm token list | awk '{if(NR>1)print}' | head -n 1 | awk '{print $1}'
  register: get_kubeadm_token
  changed_when: False
  tags:
    - join_kubeadm
  when: is_master_node

- name: "设置 token 变量"
  set_fact:
    kubeadm_token: "{{ get_kubeadm_token.stdout }}"
  tags:
    - join_kubeadm
  when: is_master_node and "stdout" in get_kubeadm_token

- name: "生成kubeadm token"
  shell: kubeadm token create
  register: create_kubeadm_token
  changed_when: False
  tags:
    - join_kubeadm
  when: is_master_node and kubeadm_token is defined and kubeadm_token == ""

- name: "设置重新生成的 token 变量"
  set_fact:
    kubeadm_token: "{{ create_kubeadm_token.stdout }}"
  tags:
    - join_kubeadm
  when: is_master_node and kubeadm_token is defined and kubeadm_token == ""

- name: "输出token"
  debug:
    var: kubeadm_token
  with_items: kubeadm_token
  tags:
    - join_kubeadm
  when: is_master_node and kubeadm_token is defined

- name: "生成kubeadm join命令"
  shell: "echo kubeadm join --token={{ kubeadm_token }} {{ hostvars[groups['masters'][0]].ansible_default_ipv4.address }}:6443 --discovery-token-unsafe-skip-ca-verification"
  register: kubeadm_join_token
  changed_when: False
  tags:
    - join_kubeadm
  when: is_master_node and kubeadm_token is defined

- name: "输出join命令"
  debug:
    var: kubeadm_join_token.stdout
  with_items: kubeadm_join_token.results
  tags:
    - join_kubeadm
  when: is_master_node and kubeadm_join_token is defined and "results" in kubeadm_join_token and "stdout" in kubeadm_join_token

- name: "设置加入节点命令"
  set_fact:
    kubeadm_join_token_cmd: "{{ kubeadm_join_token.stdout }}"
  tags:
    - join_kubeadm
  when: is_master_node and "stdout" in kubeadm_join_token

- name: "slave节点加入kubernetes"
  shell: '{{ hostvars[groups["masters"][0]]["kubeadm_join_token_cmd"] }}'
  register: slave_kubeadm_join_result
  tags:
    - join_kubeadm
  when: is_slaves_node and "kubeadm_join_token_cmd" in hostvars[groups["masters"][0]] and hostvars[groups["masters"][0]]["kubeadm_join_token_cmd"] != ""

- name: "输出slave join结果"
  debug:
    var: slave_kubeadm_join_result.stdout
  with_items: slave_kubeadm_join_result.results
  tags:
    - join_kubeadm
  when: is_slaves_node

- name: "查询节点、Pod状态"
  shell: "{{ item }}"
  register: kubeadm_pods_info
  with_items:
    - kubectl get nodes,cs -o wide
    - kubectl --namespace kube-system get pods -o wide
  tags:
    - join_kubeadm
  when: is_master_node

- name: "输出Pod信息"
  debug:
    msg: "{{ kubeadm_pods_info }}"
  tags:
    - join_kubeadm
  when: is_master_node
