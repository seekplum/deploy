---
# tasks file for install

- name: create project dir
  file:
    dest: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ HOME_ROOT }}/.ssh"
    - "{{ HOME_ROOT }}/.pip"
    # - "{{ GOPATH }}"
    # - "{{ PythonProjects }}"
    # - "{{ WebProjects }}"
    # - "{{ JavaProjects }}"
    - "{{ PACKAGES_ROOT }}"
  tags:
    - configure

- name: copy bash_profile script template
  template:
    src: .bash_profile
    dest: "{{ HOME_ROOT }}"
    mode: 0644
    force: true
    backup: true # 进行备份
  tags:
    - configure

- name: copy mystart.sh script template
  template:
    src: mystart.sh
    dest: "{{ PACKAGES_ROOT }}"
    mode: 0755
    force: true
  tags:
    - configure

- name: copy pip.conf script template
  template:
    src: pip.conf
    dest: "{{ HOME_ROOT }}/.pip"
    mode: 0644
  tags:
    - configure

- name: copy configure into home
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ HOME_ROOT }}"
    mode: 0644
    force: false # 避免原主机文件被覆盖
  with_items:
    - .vimrc
    - .gitconfig
  tags:
    - configure

- name: copy ssh config into home
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ HOME_ROOT }}/.ssh"
    mode: 0644
    force: false # 避免原主机文件被覆盖
  with_items:
    - config
    - authorized_keys
  tags:
    - configure

- name: copy virtualbox start/stop script On macOS
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ PACKAGES_ROOT }}"
    mode: 0755
    force: false # 避免原主机文件被覆盖
  with_items:
    - "start_vm.sh"
    - "stop_vm.sh"
    - "replace_config.sh"
  tags:
    - configure
  when: is_mac_os

- name: virtualbox script link to path On macOS
  file:
    src: "{{ PACKAGES_ROOT }}/{{ item }}"
    dest: "/usr/local/bin/{{ item.replace('.sh', '') }}"
    state: link
    force: false # 避免原主机文件被覆盖
  with_items:
    - "start_vm.sh"
    - "stop_vm.sh"
    - "replace_config.sh"
  tags:
    - configure
  when: is_mac_os


- name: copy apt source list on Ubuntu
  copy:
    src: "sources.list"
    dest: "/etc/apt/"
    mode: 0644
    force: true
  become: true
  become_method: sudo
  tags:
    - configure
  when: is_ubuntu_os

- name: copy git ppa list on Ubuntu
  copy:
    src: "git-core-ubuntu-ppa-focal.list"
    dest: "/etc/apt/sources.list.d/"
    mode: 0644
    force: true
  become: true
  become_method: sudo
  tags:
    - configure
  when: is_ubuntu_os

- name: copy repo on Redhat
  copy:
    src: "{{ item }}"
    dest: "/etc/yum.repos.d/"
    mode: 0644
    force: true
    backup: true
  with_items:
    - "CentOS-Base.repo"
    - "wandisco-git.repo"
  become: true
  become_method: sudo
  tags:
    - configure
  when: is_centos_os

- name: import gpg key on Redhat
  shell: "rpm --import http://opensource.wandisco.com/RPM-GPG-KEY-WANdisco"
  become: true
  become_method: sudo
  ignore_errors: True
  tags:
    - configure
  when: is_centos_os

- name: automatic startup execution on Ubuntu
  block:
    - name: copy my-rc-local.service
      copy:
        src: "rc-local.service"
        dest: "/etc/systemd/system/my-rc-local.service"
        mode: 755
        force: true
    - name: copy /etc/my-rc.local
      copy:
        src: "rc.local"
        dest: "/etc/my-rc.local"
        mode: 755
        force: true
    - name: start my-rc-local service
      service:
        name: "my-rc-local"
        state: "started"
        enabled: "yes"
  become: true
  become_method: sudo
  ignore_errors: True
  tags:
    - configure
  when: is_linux_os

- name: 配置DNS
  block:
    - name: "修改DNS"
      replace:
        path: '/etc/systemd/resolved.conf'
        regexp: '^#?DNS=.*'
        replace: 'DNS=8.8.8.8 114.114.114.114'
    - name: "重启服务"
      systemd:
        name: "systemd-resolved"
        state: "restarted"
        enabled: "yes"
        daemon_reload: yes
  become: true
  become_method: sudo
  tags:
    - configure
  when: is_ubuntu_os
