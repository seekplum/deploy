---
- name: check docker installed
  shell: "docker --version >/dev/null 2>&1 && echo 0 || echo 1"
  register: installed_of_docker
  changed_when: False
  tags:
    - docker

- name: check docker-machine installed
  shell: "docker-machine --version >/dev/null 2>&1 && echo 0 || echo 1"
  register: installed_of_docker_machine
  changed_when: False
  tags:
    - docker

- name: check docker-compose installed
  shell: "docker-compose --version >/dev/null 2>&1 && echo 0 || echo 1"
  register: installed_of_docker_compose
  changed_when: False
  tags:
    - docker

- name: copy docker repo on Redhat
  copy:
    src: "{{ role_path }}/files/deploy-docker.repo"
    dest: /etc/yum.repos.d/
    mode: 0644
    force: true
  tags:
    - docker
  when: is_centos_os and installed_of_docker.stdout == "1"

- name: Add docker source on Redhat
  shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
  tags:
    - docker
  when: is_centos_os and installed_of_docker.stdout == "1"

# 添加docker源
# yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
# 安装containerd
# yum install https://download.docker.com/linux/centos/8/x86_64/stable/Packages/containerd.io-1.6.9-3.1.el8.x86_64.rpm

# almalinux 9 docker 无法启动https://github.com/docker/cli/issues/2104
# 编辑 /etc/default/grub 设置 GRUB_CMDLINE_LINUX="console=tty0 console=ttyS0,115200n8 no_timer_check biosdevname=0 net.ifnames=0 cgroup_enable=memory swapaccount=1 systemd.unified_cgroup_hierarchy=0"
# dnf install -y grubby && grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"
# reboot
- name: Install docker on Redhat
  yum:
    name: "{{ item }}"
    state: present
    update_cache: true
    nobest: true
  with_items:
    - docker-ce
  tags:
    - docker
  when: is_centos_os and installed_of_docker.stdout == "1"

# - name: Add gpg key on Ubuntu
#   shell: "{{ item }}"
#   with_items:
#     - sudo apt-get remove docker docker.io containerd runc
#     - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
#     - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#     - sudo apt-get update
    # become: true
    # become_method: sudo
#   tags:
#     - docker
#   when: is_ubuntu_os and installed_of_docker.stdout == "1"

- name: Install docker on Ubuntu
  apt:
    pkg: "{{ item }}"
    state: present
    # update_cache: true
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  tags:
    - docker
  become: true
  become_method: sudo
  when: is_ubuntu_os and installed_of_docker.stdout == "1"

- name: Install docker on macOS
  shell: "brew cask install {{ item }}"
  with_items:
    - docker
    - docker-completion
    - docker-compose-completion
    - docker-machine-completion
  tags:
    - docker
  when: is_mac_os and installed_of_docker.stdout == "1"

- name: install docker-machine on macOS
  shell: "brew install docker-machine"
  tags:
    - docker
  when: is_mac_os and installed_of_docker_machine.stdout == "1"

- name: install docker-machine on macOS
  shell: "brew install docker-compose"
  tags:
    - docker
  when: is_mac_os and installed_of_docker_compose.stdout == "1"

- name: install docker-compose on Linux
  shell: "{{ item }}"
  with_items:
    - 'curl -L "https://github.com/docker/compose/releases/download/2.14.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
    - 'chmod +x /usr/local/bin/docker-compose'
  become: true
  become_method: sudo
  tags:
    - docker
  when: is_linux_os and installed_of_docker_compose.stdout == "1"

- name: start docker on ubuntu or Redhat
  service:
    name: "docker"
    state: "started"
    enabled: "yes"
  register: log
  ignore_errors: True
  tags:
    - docker
  when: is_linux_os

- name: "macOS修改docker启动配置"
  copy:
    src: mac-daemon.json
    dest: "{{ HOME_ROOT }}/.docker/daemon.json"
    mode: 0644
    force: true
    backup: true # 进行备份
  tags:
    - docker
  when: is_mac_os

- name: "macOS重启Docker"
  shell: osascript -e 'quit app "Docker"' && open -a Docker
  tags:
    - docker
  when: is_mac_os

# - name: "macOS关闭防火墙"
#   shell: launchctl unload /System/Library/LaunchDaemons/com.apple.alf.agent.plist
#   become: true
#   become_method: sudo
#   tags:
#     - docker
#   when: is_mac_os
