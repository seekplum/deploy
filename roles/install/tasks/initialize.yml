---
# tasks file for install

- name: check existing brew on macOS
  shell: "brew --version >/dev/null 2>&1 && echo 0 || echo 1"
  register: existing_of_brew
  changed_when: False
  tags:
    - initialize
  when: is_mac_os and ansible_user_id != "root"

- name: install brew on macOS
  shell: 'NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"'
  tags:
    - initialize
  when: is_mac_os and ansible_user_id != "root" and existing_of_brew.stdout == "1"

- name: add mysql repo on Redhat
  shell: sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
  tags:
    - initialize
  changed_when: False
  ignore_errors: True
  when: is_centos_os

- name: add RPM-GPG-KEY-EPEL on Redhat
  shell: sudo curl -fSL --connect-timeout 5 --retry 100 --retry-connrefused --retry-delay 1 --retry-max-time 100 https://archive.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9 -o /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-9
  tags:
    - initialize
  changed_when: False
  ignore_errors: True
  when: is_centos_os

- name: install packages on Redhat
  yum:
    name: "{{ item }}"
    state: present
    update_cache: true
    nobest: true
  with_items:
    # - python2-pip
    - python3-pip
    - zip
    - unzip
    - util-linux-user
    - epel-release
    - gcc
    - gcc-c++
    - zlib
    - zlib-devel
    - libffi-devel
    - sqlite-devel
    - rsync
    - git
    - bzip2
#    - python-setuptools
#    - python-devel
    - wget
    - screen
    - make
    - cmake
    - tree
    - sshpass
    - openssl-devel
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
    # - haveged
    # - the_silver_searcher
    - patch
    - pcre-devel
    - ripgrep
  tags:
    - initialize
  when: is_centos_os

# - name: install pip on Redhat
#   shell: yum -y install epel-release python-pip
#   tags:
#     - initialize
#   when: is_centos_os

# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys <Key>
- name: install packages on Ubuntu
  apt:
    pkg: "{{ item }}"
    state: present
    # update_cache: true
  # https://stackoverflow.com/questions/51622712/ansible-requires-python-apt-but-its-already-installed
  # ansible -i hosts common -m "apt name=python-apt state=latest" --become-user root
  # shell: "sudo apt-get install -y {{ item }}"
  with_items:
    - curl
    - jq
    - gcc
    - rsync
    - git
    - bzip2
    - python-setuptools
    - python3-dev
    - wget
    - screen
    - make
    - cmake
    - tree
    - sshpass
    - zlibc
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - llvm
    - libncurses5-dev
    - software-properties-common
    - haveged
    - silversearcher-ag
    - apt-transport-https
    # - ca-certificates
    - gnupg-agent
    - gnupg2
    - python-apt
    - libffi-dev
    - python3
    - python3-pip
    - pinentry-gtk2
    - python-tk
    - python3-tk
    - tk-dev
    - libpcre3-dev
    - ripgrep
  tags:
    - initialize
  ignore_errors: True
  become: true
  become_method: sudo
  when: is_ubuntu_os

- name: install xcode-select on macOS
  shell: 'xcode-select -v >/dev/null 2>&1 ||xcode-select --install'
  changed_when: False
  ignore_errors: True
  tags:
    - initialize
  when: is_mac_os

- name: install packages on macOS
  shell: 'if [ $(brew list | grep {{ item }} | wc -l) == "0" ]; then brew install {{ item }}; else echo {{ item }} is installed; fi'
  with_items:
    - wget
    - tree
    - zlib
    - sqlite
    - the_silver_searcher
    - pyenv
    - mitmproxy
    - gnupg
    - pinentry-mac
    - ripgrep
  changed_when: False
  ignore_errors: True
  tags:
    - initialize
  when: is_mac_os and ansible_user_id != "root"

- name: check sshpass installed on macOS
  shell: "sshpass -V >/dev/null 2>&1 && echo 0 || echo 1"
  register: existing_of_sshpass_on_mac
  changed_when: False
  tags:
    - initialize
  when: is_mac_os

- name: install sshpass on macOS
  shell: "brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb"
  changed_when: False
  ignore_errors: True
  tags:
    - initialize
  when: is_mac_os and ansible_user_id != "root" and existing_of_sshpass_on_mac.stdout == "1"

- name: check pip installed
  shell: "pip -V >/dev/null 2>&1 && echo 0 || echo 1"
  register: existing_of_pip
  changed_when: False
  tags:
    - initialize

- name: install pip
  shell: "easy_install pip"
  register: result_of_install_pip
  changed_when: False
  ignore_errors: True
  tags:
    - initialize
  when: existing_of_pip.stdout == "1"

- name: check existing get-pip.py
  shell: "test -f {{ PY_PIP_PATH }} && echo 0 || echo 1"
  register: existing_of_py_pip
  changed_when: False
  tags:
    - initialize
  when: '"failed" in result_of_install_pip and result_of_install_pip.failed'

- name: download get-pip.py
  get_url:
    url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
    dest: "{{ PY_PIP_PATH }}"
    force: true
  tags:
    - initialize
  when: existing_of_py_pip is defined and "stdout" in existing_of_py_pip and existing_of_py_pip.stdout == "1"

- name: install pip of get-pip.py
  shell: "python get-pip.py"
  become: true
  become_method: sudo
  tags:
    - initialize
  when: existing_of_py_pip is defined and existing_of_pip.stdout == "1"

# - name: check trash installed
#   shell: "trash --version >/dev/null 2>&1 && echo 0 || echo 1"
#   register: existing_of_trash
#   changed_when: False
#   tags:
#     - initialize

# - name: install trash-cli
#   shell: "pip install trash-cli"
#   changed_when: False
#   tags:
#     - initialize
#   when: existing_of_trash.stdout == "1"

#- name: check supervisor installed
#  shell: "supervisord --version >/dev/null 2>&1 && echo 0 || echo 1"
#  register: existing_of_supervisor
#  changed_when: False
#  tags:
#    - initialize
#
#- name: install supervisor
#  shell: "pip install supervisor"
#  changed_when: False
#  tags:
#    - initialize
#  when: existing_of_supervisor.stdout == "1"
