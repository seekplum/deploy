---
- name: "获取 k3s server token"
  shell: "cat /var/lib/rancher/k3s/server/node-token | awk -F ':' '{print $4}'"
  register: k3s_server_token
  changed_when: False
  tags:
    - k3s_agent
  when: is_linux_os and is_master_node

- name: "输出 k3s token"
  debug:
    var: k3s_server_token.stdout
  tags:
    - k3s_agent
  when: is_linux_os and is_master_node and k3s_server_token is defined and "stdout" in k3s_server_token

- name: "设置 token 变量"
  set_fact:
    k3s_server_token: "{{ k3s_server_token.stdout }}"
  tags:
    - k3s_agent
  when: is_linux_os and is_master_node and "stdout" in k3s_server_token

- name: "设置 k3s_url 变量"
  set_fact:
    k3s_server_url: "https://{{ K3S_SERVER_IP | default(ansible_default_ipv4.address) }}:6443"
  tags:
    - k3s_agent
  when: is_linux_os and is_master_node

- name: "设置加入节点命令"
  set_fact:
    k3s_join_cmd: 'curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_VERSION={{ INSTALL_K3S_VERSION | default("") }} INSTALL_K3S_MIRROR=cn K3S_TOKEN={{ hostvars[groups["masters"][0]]["k3s_server_token"] }} K3S_URL={{ hostvars[groups["masters"][0]]["k3s_server_url"] }} INSTALL_K3S_EXEC="--token ${K3S_TOKEN} --server ${K3S_URL} --docker --node-label worker.node=true --kubelet-arg container-log-max-files=3 --kubelet-arg container-log-max-size=5 --kubelet-arg cgroup-driver=systemd --kubelet-arg image-gc-high-threshold=100 --kubelet-arg config=/etc/rancher/k3s/kubelet.config" sh -s -'
  tags:
    - k3s_agent
  when: is_linux_os and is_slaves_node and "k3s_server_token" in hostvars[groups["masters"][0]] and hostvars[groups['masters'][0]]['k3s_server_token'] != ""

- name: "输出加入节点命令"
  debug:
    msg: "{{ k3s_join_cmd }}"
  tags:
    - k3s_agent
  when: is_linux_os and is_slaves_node and k3s_join_cmd is defined

- name: install k3s-agent on Linux
  shell: "{{ k3s_join_cmd }}"
  register: k3s_agent_install_result
  tags:
    - k3s_agent
  become: true
  become_method: sudo
  when: is_linux_os and is_slaves_node and k3s_join_cmd is defined

- name: "输出安装信息"
  debug:
    msg: "{{ k3s_agent_install_result }}"
  tags:
    - k3s_agent
  when: is_linux_os and is_slaves_node

- name: start k3s-agent on ubuntu or Redhat
  service:
    name: "k3s-agent"
    state: "started"
    enabled: "yes"
  register: log
  ignore_errors: True
  tags:
    - k3s_agent
  when: is_linux_os and is_slaves_node
